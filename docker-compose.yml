services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - frontend_network

  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      - APP_PORT=5000
      - APP_HOST=0.0.0.0
      - REDIS_HOST=redis
      - MONGO_HOST=mongo
      - IMAGE_MICROSERVICE_HOST=image-microservice
    ports:
      - "5000:5000"
    networks:
      - backend-network
    depends_on:
      - mongo
      - image-microservice

  image-microservice:
    build:
      context: ./image-microservice
      dockerfile: Dockerfile
    environment:
      - APP_PORT=3001
    networks:
      - backend-network

  mongo:
    image: mongo:latest
    volumes:
      - mongo-data:/data/db
    networks:
      - backend-network
      
  redis:
    image: redis:latest
    volumes:
      - redis-data:/data
    networks:
      - backend-network

networks:
  frontend_network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data: